server:
  port: ${PORT:8080}
  address: 0.0.0.0

logging:
  level:
    echoflux: trace
    org.jooq.tools.LoggerListener: debug

vaadin:
  launch-browser: true
  allowed-packages: com.vaadin,org.vaadin,echoflux
  async-supported: true
  frontend:
    hotdeploy: true
  react:
    enable: false

spring:
  application:
    name: echoflux
  config:
    import: sm@
  threads:
    virtual:
      enabled: true
  datasource:
    url: jdbc:postgresql://localhost:5432/echoflux?reWriteBatchedInserts=true
    username: echoflux
    password: echoflux
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      auto-commit: false
      maximum-pool-size: 20
      minimum-idle: 2
      idle-timeout: 30000
      connection-timeout: 10000
      data-source-properties:
        ApplicationName: ${spring.application.name}

  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
  servlet:
    multipart:
      max-file-size: 5000MB
      max-request-size: 5000MB
  freemarker:
    template-loader-path: classpath:/templates/
    suffix: .ftl
    charset: utf-8
    check-template-location: true

gcloud:
  bucket-name: 'echoflux'
  temp-bucket-name: 'echoflux-temp'
  speech-endpoint: 'europe-west4-speech.googleapis.com:443'
  ai-platform-endpoint: 'europe-west4-aiplatform.googleapis.com:443'
  location: 'europe-west4'

openai:
  api-key: sk-svcacct-NLUJZ5UL2DOsL5oJZOHYkRYt_FyBqJTXEtDYxckE6WmhVeDtkUYAsABytI8itQK2q7nT3BlbkFJVJry_P6jm2NjzdCqkjea84LhYF25gX4NAYpHDTvXTjN-7YQ3LOBTcDZBODUyTP1jZ_QA #${sm@openai-api-key}

yt-dlp:
  execution-path: ${YT_DLP_EXECUTION_PATH}

ffmpeg:
  ffmpeg-execution-path: ${FFMPEG_EXECUTION_PATH}
  ffprobe-execution-path: ${FFPROBE_EXECUTION_PATH}

pyannote:
  api-key: sk_00867a383ee545198a5a2466e0139089 #${sm@pyannote-api-key}
  base-url: 'https://api.pyannote.ai/v1'